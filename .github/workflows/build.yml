name: Build
on: [push]
jobs:
  python-formatting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run flake8 on api/
        run: flake8 api/

      - name: Run flake8 on helpers
        run: flake8 helpers/

      - name: Run flake8 on tests
        run: flake8 tests/

      - name: Run autoflake to remove unused imports
        run: autoflake -i --remove-all-unused-imports api/*.py

      - name: Run isort to check ordering of imports
        run: isort --check -diff api/

  run-unit-tests:
    needs: python-formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
  
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run pytest
        env:
          PASSWORD: ${{ secrets.PASSWORD }}
          PGDATABASE: ${{ secrets.PGDATABASE }}
          PHGHOST: ${{ secrets.PGHOST }}
          PGPORT: ${{ secrets.PGPORT }}
          PGUSER: ${{ secrets.PGUSER }}
          SECRETKEY: ${{ secrets.SECRETKEY }}
        run: pytest tests/*.py

  check-unit-test-coverage:
    needs: run-unit-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
  
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run coverage to check unit test coverage
        env:
            PASSWORD: ${{ secrets.PASSWORD }}
            PGDATABASE: ${{ secrets.PGDATABASE }}
            PHGHOST: ${{ secrets.PGHOST }}
            PGPORT: ${{ secrets.PGPORT }}
            PGUSER: ${{ secrets.PGUSER }}
            SECRETKEY: ${{ secrets.SECRETKEY }}
        run: |
          coverage run -m pytest tests/
          coverage report

  deploy-to-vercel:
    needs: check-unit-test-coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_PROJ_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'